SELECT *
FROM ALL_INDEXES
WHERE OWNER = 'DEVELOPER'
   OR OWNER = 'PRODUCTOR';

SELECT *
FROM ALL_IND_COLUMNS
WHERE INDEX_OWNER = 'DEVELOPER'
   OR INDEX_OWNER = 'PRODUCTOR';

SELECT *
FROM ALL_TABLES
WHERE OWNER = 'DEVELOPER';

SELECT *
FROM (SELECT TABLE_NAME DEVELOPER_NAME FROM ALL_TABLES WHERE OWNER = UPPER('DEVELOPER')) DEV
         FULL OUTER JOIN
     (SELECT TABLE_NAME PRODUCTOR_NAME FROM ALL_TABLES WHERE OWNER = UPPER('PRODUCTOR')) PROD
     ON DEV.DEVELOPER_NAME = PROD.PRODUCTOR_NAME;


SELECT TABLE_NAME DEVELOPER_NAME
FROM ALL_TABLES
WHERE OWNER = UPPER('DEVELOPER');

SELECT *
FROM ALL_CONSTRAINTS
WHERE OWNER = 'PRODUCTOR'
  AND TABLE_NAME = 'PERSONS'
  AND NOT REGEXP_LIKE(CONSTRAINT_NAME, '^SYS_C\d+');


SELECT *
FROM ALL_TAB_COLUMNS
WHERE OWNER = 'DEVELOPER';

BEGIN
    IF 'NUMBER' != 'VARCHAR2' THEN
        DBMS_OUTPUT.PUT_LINE('MISMATCH OF DATA TYPE IN #' || ' #');
    END IF;
END;

SELECT *
FROM ALL_OBJECTS
WHERE OWNER = 'DEVELOPER'
  AND OBJECT_TYPE = 'FUNCTION';
SELECT *
FROM ALL_SOURCE
WHERE OWNER = 'DEVELOPER';

SELECT UPPER(TRIM(' ' FROM (TRANSLATE(text, CHR(10) || CHR(13), ' ')))) object_text
FROM all_source;

SELECT UPPER(TRIM(' ' FROM (TRANSLATE(text, CHR(10) || CHR(13), ' ')))) object_text
FROM all_source
WHERE owner = UPPER('DEVELOPER')
  AND name = UPPER('TEST_FUNCTION')
  AND type = UPPER('FUNCTION')
  AND text != chr(10);


SELECT *
FROM (SELECT OBJECT_NAME DEVELOPER_NAME
      FROM ALL_OBJECTS
      WHERE OWNER = UPPER('DEVELOPER')
        AND OBJECT_TYPE = UPPER('FUNCTION')) DEVELOPER
         FULL JOIN
     (SELECT OBJECT_NAME PRODUCTOR_NAME
      FROM ALL_OBJECTS
      WHERE OWNER = UPPER('PRODUCTOR')
        AND OBJECT_TYPE = UPPER('FUNCTION')) PRODUCTOR
     ON DEVELOPER.DEVELOPER_NAME = PRODUCTOR.PRODUCTOR_NAME;



SELECT *
FROM (SELECT CONSTRAINT_NAME DEVELOPER_CONSTRAINT_NAME
      FROM ALL_CONSTRAINTS
      WHERE OWNER = UPPER('DEVELOPER')
        AND TABLE_NAME = UPPER('PERSONS')
        AND NOT REGEXP_LIKE(CONSTRAINT_NAME, '^SYS_C\d+')) DEVELOPER
         FULL OUTER JOIN
     (SELECT CONSTRAINT_NAME PRODUCTOR_CONSTRAINT_NAME
      FROM ALL_CONSTRAINTS
      WHERE OWNER = UPPER('PRODUCTOR')
        AND TABLE_NAME = UPPER('PERSONS')
        AND NOT REGEXP_LIKE(CONSTRAINT_NAME, '^SYS_C\d+')) PRODUCTOR
     ON DEVELOPER.DEVELOPER_CONSTRAINT_NAME = PRODUCTOR.PRODUCTOR_CONSTRAINT_NAME;



SELECT DISTINCT NAME
FROM ALL_SOURCE
WHERE OWNER = 'DEVELOPER'
  AND TYPE = 'FUNCTION';


SELECT *
FROM (SELECT DISTINCT NAME DEVELOPER_NAME
      FROM ALL_SOURCE
      WHERE OWNER = UPPER('DEVELOPER')
        AND TYPE = UPPER('PROCEDURE')) DEVELOPER
         FULL JOIN
     (SELECT DISTINCT NAME PRODUCTOR_NAME
      FROM ALL_SOURCE
      WHERE OWNER = UPPER('PRODUCTION')
        AND TYPE = UPPER('PROCEDURE')) PRODUCTOR
     ON DEVELOPER.DEVELOPER_NAME = PRODUCTOR.PRODUCTOR_NAME;


SELECT UPPER(TRIM(' ' FROM (TRANSLATE(text, CHR(10) || CHR(13), ' ')))) object_text
FROM all_source
WHERE owner = UPPER('PRODUCTOR')
  AND type = UPPER('FUNCTION')
  AND text != chr(10);

SELECT *
FROM ALL_OBJECTS;

SELECT OBJECT_NAME

FROM ALL_OBJECTS
WHERE OWNER = UPPER('PRODUCTOR')
  AND OBJECT_TYPE = UPPER('FUNCTION');

SELECT *
FROM (SELECT OBJECT_NAME DEVELOPER_NAME
      FROM ALL_OBJECTS
      WHERE OWNER = UPPER('DEVELOPER')
        AND OBJECT_TYPE = UPPER('FUNCTION')) DEVELOPER
         FULL OUTER JOIN
     (SELECT OBJECT_NAME PRODUCTOR_NAME
      FROM ALL_OBJECTS
      WHERE OWNER = UPPER('PRODUCTOR')
        AND OBJECT_TYPE = UPPER('FUNCTION')) PRODUCTOR
     ON DEVELOPER.DEVELOPER_NAME = PRODUCTOR.PRODUCTOR_NAME;


SELECT *
FROM ALL_PROCEDURES
WHERE OBJECT_TYPE = 'FUNCTION';

SELECT *
FROM ALL_USERS;


SELECT OBJECT_NAME
FROM ALL_OBJECTS
WHERE OWNER = 'PRODUCTOR'
  AND OBJECT_TYPE = 'FUNCTION'
MINUS
SELECT OBJECT_NAME
FROM ALL_OBJECTS
WHERE OWNER = 'DEVELOPER'
  AND OBJECT_TYPE = 'FUNCTION';



SELECT *
FROM (SELECT OBJECT_NAME
      FROM ALL_OBJECTS
      WHERE OWNER = 'PRODUCTOR'
        AND OBJECT_TYPE = 'FUNCTION'
      MINUS
      SELECT OBJECT_NAME
      FROM ALL_OBJECTS
      WHERE OWNER = 'DEVELOPER'
        AND OBJECT_TYPE = 'FUNCTION');

DROP PROCEDURE CHECK_FUNCTIONS_OR_PROCEDURES;



SELECT *
FROM ALL_OBJECTS
WHERE OBJECT_TYPE = 'PROCEDURE';


SELECT *
FROM (SELECT OBJECT_NAME
      FROM ALL_OBJECTS
      WHERE OWNER = 'PRODUCTOR'
        AND OBJECT_TYPE = 'FUNCTION'
      MINUS
      SELECT OBJECT_NAME
      FROM ALL_OBJECTS
      WHERE OWNER = 'DEVELOPER'
        AND OBJECT_TYPE = 'FUNCTION');


SELECT TRIM(' ' FROM (TRANSLATE(ALL_SOURCE.TEXT, CHR(10) || CHR(13), ' ')))
FROM ALL_SOURCE;

SELECT *
FROM ALL_INDEXES AI
WHERE AI.OWNER = 'DEVELOPER';



SELECT DISTINCT dev_uniqueness, dev_index_name
FROM (SELECT index_name          dev_index_name,
             ai.index_type       dev_index_type,
             ai.table_name       dev_table_name,
             ai.table_type       dev_table_type,
             uniqueness          dev_uniqueness,
             aic.column_name     dev_column_name,
             aic.column_position dev_column_position
      FROM ALL_INDEXES
               INNER JOIN all_ind_columns aic
                          ON ALL_INDEXES.index_name = aic.index_name AND ai.owner = aic.index_owner
      WHERE ai.owner = UPPER('DEVELOPER')
        AND NOT REGEXP_LIKE(ai.index_name, '^SYS_C\d+'));



SELECT DISTINCT DEVELOPER_UNIQUENESS, DEVELOPER_INDEX_NAME, PRODUCTOR_UNIQUENESS, PRODUCTOR_INDEX_NAME
FROM (SELECT AI.INDEX_NAME   DEVELOPER_INDEX_NAME,
             AI.TABLE_NAME   DEVELOPER_TABLE_NAME,
             AI.UNIQUENESS   DEVELOPER_UNIQUENESS,
             AIC.COLUMN_NAME DEVELOPER_COLUMN_NAME
      FROM ALL_INDEXES AI
               INNER JOIN ALL_IND_COLUMNS AIC
                          ON AI.INDEX_NAME = AIC.INDEX_NAME AND AI.OWNER = AIC.INDEX_OWNER
      WHERE AI.OWNER = UPPER('DEVELOPER')
        AND NOT REGEXP_LIKE(AI.INDEX_NAME, '^SYS_C\d+')) DEVELOPER
         FULL OUTER JOIN
     (SELECT AI.INDEX_NAME   PRODUCTOR_INDEX_NAME,
             AI.TABLE_NAME   PRODUCTOR_TABLE_NAME,
             AI.UNIQUENESS   PRODUCTOR_UNIQUENESS,
             AIC.COLUMN_NAME PRODUCTOR_COLUMN_NAME
      FROM ALL_INDEXES AI
               INNER JOIN ALL_IND_COLUMNS AIC
                          ON AI.INDEX_NAME = AIC.INDEX_NAME AND AI.OWNER = AIC.INDEX_OWNER
      WHERE AI.OWNER = UPPER('PRODUCTOR')
        AND NOT REGEXP_LIKE(AI.INDEX_NAME, '^SYS_C\d+')) PRODUCTOR
     ON DEVELOPER.DEVELOPER_TABLE_NAME = PRODUCTOR.PRODUCTOR_TABLE_NAME
         AND DEVELOPER.DEVELOPER_COLUMN_NAME = PRODUCTOR.PRODUCTOR_COLUMN_NAME;